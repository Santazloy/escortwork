import logging
import asyncio
import os
from telegram import Bot
from telegram.error import TelegramError

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
BOT_TOKEN = os.getenv("BOT_TOKEN")
GROUP_ID = os.getenv("GROUP_ID")

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)


async def send_application_to_group(data, photos=None, video=None):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∞–Ω–∫–µ—Ç—É –≤ Telegram –≥—Ä—É–ø–ø—É

    Args:
        data: —Å–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ –∞–Ω–∫–µ—Ç—ã
        photos: —Å–ø–∏—Å–æ–∫ –ø—É—Ç–µ–π –∫ —Ñ–æ—Ç–æ —Ñ–∞–π–ª–∞–º
        video: –ø—É—Ç—å –∫ –≤–∏–¥–µ–æ —Ñ–∞–π–ª—É
    """
    bot = Bot(token=BOT_TOKEN)

    try:
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        message = f"""
üÜï <b>–ù–û–í–ê–Ø –ê–ù–ö–ï–¢–ê –ú–û–î–ï–õ–ò</b>

üë§ <b>–ò–º—è:</b> {data.get('name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}
üéÇ <b>–í–æ–∑—Ä–∞—Å—Ç:</b> {data.get('age', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')} –ª–µ—Ç
üìè <b>–†–æ—Å—Ç:</b> {data.get('height', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')} —Å–º
‚öñÔ∏è <b>–í–µ—Å:</b> {data.get('weight', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')} –∫–≥
üåç <b>–ì—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–æ:</b> {data.get('citizenship', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}
üí¨ <b>Telegram:</b> {data.get('telegram', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}
üì≤ <b>WhatsApp:</b> {data.get('whatsapp', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}
üíº <b>–û–ø—ã—Ç:</b> {data.get('experience', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}
"""

        if data.get('countries'):
            message += f"üó∫Ô∏è <b>–°—Ç—Ä–∞–Ω—ã –æ–ø—ã—Ç–∞:</b> {data.get('countries')}\n"

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await bot.send_message(
            chat_id=GROUP_ID,
            text=message,
            parse_mode='HTML'
        )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ –µ—Å–ª–∏ –µ—Å—Ç—å
        if photos:
            for photo_path in photos:
                try:
                    with open(photo_path, 'rb') as photo_file:
                        await bot.send_photo(
                            chat_id=GROUP_ID,
                            photo=photo_file
                        )
                except Exception as e:
                    logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ {photo_path}: {e}")

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ –µ—Å–ª–∏ –µ—Å—Ç—å
        if video:
            try:
                with open(video, 'rb') as video_file:
                    await bot.send_video(
                        chat_id=GROUP_ID,
                        video=video_file,
                        caption="üìπ –í–∏–¥–µ–æ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è"
                    )
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤–∏–¥–µ–æ {video}: {e}")

        logger.info("–ê–Ω–∫–µ—Ç–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ –≥—Ä—É–ø–ø—É")
        return True

    except TelegramError as e:
        logger.error(f"–û—à–∏–±–∫–∞ Telegram API: {e}")
        return False
    except Exception as e:
        logger.error(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞
def send_application(data, photos=None, video=None):
    """–°–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ–±–µ—Ä—Ç–∫–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–Ω–∫–µ—Ç—ã"""
    return asyncio.run(send_application_to_group(data, photos, video))


if __name__ == "__main__":
    # –¢–µ—Å—Ç–æ–≤–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞
    test_data = {
        'name': '–¢–µ—Å—Ç –¢–µ—Å—Ç–æ–≤—ã–π',
        'age': '25',
        'height': '175',
        'weight': '55',
        'citizenship': '–†–æ—Å—Å–∏—è',
        'telegram': '@test',
        'whatsapp': '+7 999 999-99-99',
        'experience': '–ï—Å—Ç—å –æ–ø—ã—Ç',
        'countries': '–†–æ—Å—Å–∏—è, –ò—Ç–∞–ª–∏—è'
    }

    print("–û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–π –∞–Ω–∫–µ—Ç—ã...")
    result = send_application(test_data)
    if result:
        print("‚úÖ –£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏")